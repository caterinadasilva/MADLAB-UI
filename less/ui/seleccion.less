//
// Bootstrap Select
// --------------------------------------------------
// Credits: Silvio Moreto
// http://github.com/silviomoreto/bootstrap-select

.select {
  display: inline-block;
  margin-bottom: @grid-gutter/2;
  border-radius: 0;

  // Select grid
  &[class*="span"] {
    [class*="span"] > & {
      margin-left: 0; // No margin if select is a closest child of the grid
    }
    .btn {
      width: 100%; // Button should take all available space of its parent
      border-radius: initial;
    }
  }

  // Fluid width. Takes all available space and behaves like a block
  &.select-block {
    display: block;
    float: none;
    margin-left: 0;
    width: auto;
    .clearfix();

    .btn {
      width: 100%;
      border-radius: initial;
            
    }
    .dropdown-menu {
      width: 100%;
      border-radius: initial;
    }
  }
  
  
  // Button Sizes
  // --------------------------------------------------
  .btn {
    width: 200px; // Default select width until .span* is applied
    border-radius: initial;
    
    // Huge
    &.btn-hg {
      .filter-option {
        left: 20px;
        right: 40px;
        top: 15px;
      }
      .caret {
        font-size: @icon-xl;
        right: 25px;        
      }
    }
    
    // Large
    &.btn-lg {
      .filter-option {
        left: 20px;
        right: 35px;
      }
      .caret {
        font-size: @icon-large;
        }
    }
    
    // Small
    &.btn-sm {
      .filter-option {
        left: 20px;
        right: 33px;
      }
      .caret {
        right: 13px;
      }
    }
    
    // Exstra small
    &.btn-xs {
      .filter-option {
        left: 13px;
        right: 33px;
        top: 5px;
      }
      .caret {
        right: 13px;
      }
    }
    
    .filter-option {
      height: 26px;
      left: 13px;
      overflow: hidden;
      position: absolute;
      right: 33px;
      text-align: left;
      top: 10px;
    }
    .caret {
    font-size:@icon-medium;
      position: absolute;
      right: 25px;
      top: 25%;
    }
    .dropdown-toggle {
      border-radius: initial;
    }

    // Dropdown menu
    .dropdown-menu {
      min-width: 100%;
      border-radius: initial;

      dt {
        cursor: default;
        display: block;
        padding: 3px 20px;
      }
      li {
        &:not(.disabled) > a:hover small {
          color: fade(@inverse, .4);
        }
        > a {
          min-height: 20px;
          border-radius: initial;
          
          &.opt {
            padding-left: 35px;
          }
        }
        small {
          padding-left: .5em;
        }
        > dt small {
          font-weight: normal;
        }
      }
    }

    // Disabled state
    > .disabled,
    .dropdown-menu li.disabled > a {
      cursor: default;
    }
  }

  // Caret
  .caret {
    .caret(@inverse);
  }
}

.select-brand{
    .button-variant(@inverse, @btn-brand-color, @btn-brand-active, @btn-brand-active);
    border: none;
    }

.select-default{
    .button-variant(@inverse, @soft-grey, @grey, @dark-grey);
    border: none;
    }
    
.select-form{
  color: @soft-grey;
  background-color: @inverse;
  border-color: @soft-grey;

  .caret {
    .caret(@soft-grey);
  }

  &:hover,
  &:focus,
  &:active,
  &.active,
  .open .dropdown-toggle& {
    color: @dark-grey;
    background-color: @inverse;
    border-color: @grey;
    
    .caret {
    .caret(@grey);
  }
  }
  &:active,
  &.active,
  .open .dropdown-toggle& {
          color: @dark-grey;
    background: @inverse;
    border-color: @dark-grey;
    
      .caret {
    .caret(@dark-grey);
  }
  }
  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    &,
    &:hover,
    &:focus,
    &:active,
    &.active {
      background-color: @inverse;
    }
  }
}